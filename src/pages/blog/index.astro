---
import dayjs from "dayjs";

import BlogToC from "../../components/BlogToC";
import Layout from "../../layouts/Layout.astro";
import type { ByYear } from "../../types";
import { getBlogEntries } from "../../util/getBlogEntries";

interface Props {
  year?: string;
  defaultFilters?: string[];
}

const { year, defaultFilters } = Astro.props as Props;

const blogEntries = await getBlogEntries();

const byYear: ByYear = {};

for (const entry of blogEntries) {
  let noDay = entry.data.date.split(" ").length <= 2;
  let dayObj = dayjs(entry.data.date);

  let date = dayObj.format(noDay ? "MMMM" : "MMMM DD");
  let year = dayObj.get("year");

  const { remarkPluginFrontmatter } = await entry.render();

  let metadata = {
    url: `/${entry.collection}/${entry.slug}`,
    title: entry.data.title,
    date,
    tags: entry.data.tags?.sort() ?? [],
    readingTime: remarkPluginFrontmatter.readingTime,
  };

  if (byYear[year]) {
    byYear[year].push(metadata);
  } else {
    byYear[year] = [metadata];
  }
}

for (const years in byYear) {
  byYear[years] = byYear[years].sort(
    (a, b) => dayjs(b.date).unix() - dayjs(a.date).unix(),
  );
}
---

<Layout title="Enoch - Blog" activeNav="blog">
  <BlogToC
    client:load
    byYear={byYear}
    year={year}
    defaultFilters={defaultFilters}
  />
</Layout>

<style lang="scss">
  h1 {
    margin: 1.25rem 0 0.4rem 0;
  }

  .post {
    margin-bottom: 0.5rem;

    section {
    }

    .title {
      line-height: 1.4;
    }
  }

  .readtime {
    color: var(--grey);
  }

  .tags-container {
    margin-top: 0.3rem;
  }

  .tag {
    border-radius: var(--border-radius);
    padding: 0.1rem 0.3rem;
    background: var(--grey);
    color: var(--background);
  }
</style>
