---
import type { MarkdownInstance } from "astro";
import dayjs from "dayjs";

import BlogToC from "../../components/BlogToC";
import Layout from "../../layouts/Layout.astro";
import type { ByYear, Frontmatter } from "../../types";

let byYear = (await Astro.glob<MarkdownInstance<Frontmatter>>("./**/*.md*"))
  .filter(post => !post.frontmatter.draft)
  .map((post) => {
    let noDay = post.frontmatter.date.split(" ").length <= 2;
    let dayObj = dayjs(post.frontmatter.date);

    let date = dayObj.format(noDay ? "MMMM" : "MMMM DD");
    let year = dayObj.get("year");
    return {
      url: post.url,
      title: post.frontmatter.title,
      date,
      year,
      minutesRead: post.frontmatter.minutesRead,
      tags: post.frontmatter.tags?.sort() ?? [],
    };
  })
  .reduce<ByYear>((byYear, post) => {
    let year = post.year;
    if (byYear[year]) {
      byYear[year].push(post);
    } else {
      byYear[year] = [post];
    }
    return byYear;
  }, {});

for (const years in byYear) {
  byYear[years] = byYear[years].sort(
    (a, b) => dayjs(b.date).unix() - dayjs(a.date).unix()
  );
}
---

<Layout title="Enoch - Blog" activeNav="blog">
  <BlogToC client:load byYear={byYear} />
</Layout>

<style lang="scss">
  h1 {
    margin: 1.25rem 0 0.4rem 0;
  }

  .post {
    margin-bottom: 0.5rem;

    section {
    }

    .title {
      line-height: 1.4;
    }
  }

  .readtime {
    color: var(--grey);
  }

  .tags-container {
    margin-top: 0.3rem;
  }

  .tag {
    border-radius: var(--border-radius);
    padding: 0.1rem 0.3rem;
    background: var(--grey);
    color: var(--background);
  }
</style>
