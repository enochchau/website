---
import "../styles/reset.css";
import "../styles/base.css";

import penguinSvg from "../assets/penguin.svg";
import GlobalNav from "../components/GlobalNav.astro";

export interface Props {
  title: string;
  description?: string;
  activeNav?: "blog" | "create" | "about";
  hideNav?: boolean;
}

const {
  title,
  activeNav,
  description = "Enoch's Website",
  hideNav,
} = Astro.props as Props;
---

<!doctype html>
<html lang="en" class="text-black bg-white dark:text-white dark:bg-black">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="icon"
      href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ðŸŽ±</text></svg>"
    />
    <link rel="stylesheet" href="/fonts/FantasqueSansMono-Regular-decl.css " />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="RSS Feed for enochchau.com"
      href="/rss.xml"
    />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="generator" content={Astro.generator} />
    <meta name="title" property="og:title" content={title} />
    <meta name="description" property="og:description" content={description} />
    <meta name="image" property="og:image" content={penguinSvg.src} />
    <meta name="author" content="Enoch Chau" />
    <meta
      property="og:url"
      content={`https://enochchau.com${Astro.url.pathname}`}
    />
    <title>{title}</title>
    <script>
      const root = document.documentElement;
      function readTheme() {
        const theme = localStorage.getItem("theme");
        if (theme === "dark") {
          root.classList.add("dark");
          return;
        } else if (theme === "light") {
          root.classList.remove("dark");
          return;
        }

        const darkMedia = matchMedia("(prefers-color-scheme: dark)");

        if (darkMedia.matches) {
          root.classList.add("dark");
        } else {
          root.classList.remove("dark");
        }
      }

      readTheme();

      // listen to theme changes from other tabs
      window.addEventListener("storage", readTheme);
    </script>
    <style lang="scss" is:global>
      *,
      *:before,
      *:after {
        box-sizing: border-box;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
    </style>
  </head>

  <body class="mx-auto my-4 max-w-3xl px-1">
    {!hideNav && <GlobalNav activeNav={activeNav} />}
    <slot />
  </body>
</html>
